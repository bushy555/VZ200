10 '************************* 
20 '***     LOAD-UP       *** 
30 '*** PROGRAM II OF III *** 
40 '*** TO LOAD 24 HI-RES *** 
50 '*** SCREENS INTO 64K  *** 
60 '*** MEM. EXP.         *** 
70 '***  BOB KITCH 6/88   *** 
80 '************************* 
898 ' 
899 '***START SUBPROGRAM. 
900 GOTO 1100 
998 ' 
999 '***LOAD 2K SCREEN FILE. 
1000 BLOAD"ABCDEFGH":            :'***POKE ADDR. 31825 TO 31832 
1010 GOTO 2220 
1020 '***DO NOT ALTER ANY CODE ABOVE THIS LINE. 
1030 '***OTHERWISE CHANGE AD% IN LINE #2100 
1040 '***MAKE INVERSE CHARACTERS IN LINES 3000 AND 3020*********
1098 ' 
1099 '***CHECK THAT 64K MEM. EXP. OPERATIONAL. 
1100 GOSUB 3020 
1110 FL%=0                        :'***FLAG FOR TEST CONDITIONS. 
1120 FOR I%=1 TO 3                :'***BANKS 1 TO 3. 
1130    OUT 127,I%:SOUND 9,2      :'***I/0 PORT 7FH. 
1140    POKE -1000, (100-1%)      :'***TEST ADDR. OFC18H. 
1150 NEXT I% 
1160 FOR I%=3 TO 1 STEP -1        :'***BANKS 3 TO 1. 
1170    OUT 127,I%:SOUND 9,2 
1180    IF PEEK(-1000)<>(100-I%) THEN FL%=-1 
1190 NEXT I% 
1200 IF FL%<>0 THEN PRINT@64,"64K RAM NOT FITTED.":STOP 
1210 IF FL%=0 THEN PRINT@64,"64K RAM OK" 
1298 ' 
1299 '***CHECK THAT DOS OPERATIONAL BY CHECKING FIRST 4 ID BYTES 
1300 IF (PEEK(16384))<>170 THEN FL%=-1   :'***<0AAH>@4000H 
1310 IF (PEEK(16385))<>85 THEN FL%=-1    :'***<55H>@4001H 
1320 IF (PEEK(16386))<>231 THEN FL%=-1   :'***<0E7H>@4002H 
1330 IF (PEEK(16387))<>24 THEN FL%=-1    :'***<18H>@4003H 
1340 IF FL%<>0 THEN PRINT@128,"DOS NOT FITTED.":STOP 
1350 IF FL%=0 THEN PRINT@128,"DOS OK" 
1398 ' 
1399 '***CHECK TOM IS 0BEC8H. 
1400 IF (PEEK(30897))<>200 THEN FL%=-1 
1410 IF (PEEK(30898))<>190 THEN FL%=-1 
1420 IF FL%<>0 THEN PRINT@192,"TOM NOT SET CORRECTLY":STOP 
1430 IF FL%=0 THEN PRINT@192,"TOM OK" 
1496 ' 
1497 '***LOWER TOM TO 0AFFFH FOR BUFFER, M/L AND JUMP POINTERS. 
1498 '***0B200H-0BBFFH IS A SCREEN BUFFER. 
1499 '***0BC00H-0BE0FH IS M/L MOVE ROUTINES LOADED FROM "MOVEUP" 
1500 POKE 30897,255:POKE 30898,175:CLEAR 50 
1510 PRINT:PRINT"LOADING MOVE-UP ROUTINE." 
1520 BLOAD"MOVEUP": : '***LOAD SCREEN MOVE SUBS. 
1598 ' 
1599 '***POKE IN BLOCK MOVE FROM 0BEABH. (0BE10H-0BEAAH SPARE.)" 
1600 DATA 243           :' DI 
1610 DATA 033,000,112   :' LD HL,7000H (SOURCE) 
1620 DATA 017,000,192   :' LD DE,C000H (DESTINATION) 
1630 DATA 001,000,008   :' LD BC,0800H (SIZE) 
1640 DATA 237,176       :' LDIR 
1650 DATA 251           :' EI 
1660 DATA 201           :' RETURN 
1670 FOR AD%=-16725 TO -16712 :'***FROM 0BEABH TO 0BEB8H. 
1680    READ DT%:POKE AD%,DT% 
1690 NEXT AD% 
1698 ' 
1699 '***SET USR VECTOR TO 0BEABH. 
1700 POKE 30862,171:POKE 30863,190 
1798 ' 
1799 '***SET ADDR. FOR MSB OF DESTINATION IN M/L FOR PAGING. 
1800 MD%=-16719 : '***MSB OF DEST. PG. 0BEB1H. 
1898 ' 
1899 '***PAUSE AND PUT UP MESSAGE. 
1900 GOSUB 3020:PRINT"A COUPLE OF OPTIONS EXIST HERE." 
1910 PRINT:PRINT" <1> CONTINUE WITH 2K BY 24 PIC FILES." 
1920 PRINT:PRINT" <2> DO 16K BY 3 MEM BANK LOAD.":PRINT 
1930 PRINT"ENTER 1 OR 2";:INPUT A$:POKE 30791,ASC(A$) 
1940 IF A$="1" THEN GOTO 1960 
1950 IF A$="2" THEN GOTO 2400 ELSE GOTO 1900 
1960 GOSUB 3020 
1970 PRINT" ***INSERT PICTURE DISK***" 
1980 SOUND 8,5;0,3;8,5;0,3;8,5 
1990 GOSUB 3000 
1998 ' 
1999 '***DATA FOR 24 SCREEN FILES. 
2000 '***MEMORY BLOCK 1. 
2010 DATA 1.1.EFGH,1.3.EFGH,1.2.EFGH,1.4.EFGH 
2020 DATA 1.5.EFGH,1.6.EFGH,1.7.EFGH,1.8.EFGH 
2030 '***MEMORY BLOCK 2. 
2040 DATA 2.1.EFGH,2.3.EFGH,2.2.EFGH,2.4.EFGH 
2050 DATA 2.5.EFGH,2.6.EFGH,2.7.EFGH,2.8.EFGH 
2060 '***MEMORY BLOCK 3. 
2070 DATA 3.1.EFGH,3.3.EFGH,3.2.EFGH,3.4.EFGH 
2080 DATA 3.5.EFGH,3.6.EFGH,3.7.EFGH,3.8.EFGH 
2098' 
2099 '***MAIN READ-IN ROUTINE.
2100 AD%=31825:MODE(1) 
2110 FOR I%=1 TO 3                  :'***MEM. BLOCKS 1 TO 3 
2120    OUT 127,1%                  :'***SET MEMORY BANK. 
2130    FOR J%=192 TO 255 STEP 8    :'***MSB 0C0H,0F8H,8H(8 SCRNS) 
2140       POKE MD%,J%              :'***SET MSB OF PAGE IN M/L. 
2150       F$=""                    :'***ASSISTS STRING HANDLING. 
2160       READ F$:L%=LEN(F$):IF L%>8 THEN F$=LEFT$(F$,8):L%=8 
2170       IF L%<>8 THEN F$=LEFT$ ("        ", (8-L%))+F$ 
2180       FOR K%=1 TO 8            :'***POKE IN FILENAME. 
2190          POKE AD%-1+K%,ASC(MID$(F$,K%,1)) 
2200       NEXT K% 
2210       GOTO 1000                :'***LOAD FILE FROM DISK. 
2220       K%=USR(0)                :'***MOVE SCREEN TO HI-MEM. 
2230    NEXT J% 
2240 NEXT I% 
2298 ' 
2299 '***DISPLAY END MESSAGE. 
2300 MODE(0) : '***RETURN TO TEXT MODE. 
2310 GOSUB 3020 
2320 PRINT@64,"ALL SCREENS HAVE BEEN SAVED TO THE MEMORY"; 
2330 PRINT"EXPANSION." 
2340 PRINT"REINSERT THE <PROGRAM DISK> TO CONTINUE DISPLAY" 
2350 SOUND 8,5;0,3;8,5;0,3;8,5 
2360 PRINT@320,"IF <MEMORY BANK SAVE> WANTED-" 
2370 PRINT"THEN CONTINUE" 
3000 ' 
2398 ' 
2399 '***RUN THROW-UP DISPLAY PROGRAM. 
2400 PRINT:PRINT"LOADING THROW-UP" 
2410 RUN"THROWUP" 
2997 STOP 
2998 ' 
2999 '***SUBROUTINE FOR NEW SCREEN. 
3000 PRINT@480,"PRESS ANY KEY TO CONTINUE";
3010 A$=INKEY$:A$=INKEY$:IF A$="" THEN GOTO 3010 
3020 CLS:PRINT@13,"LOAD-UP":PRINT:PRINT:RETURN
9998 ' 
9999 '***UPDATE DISK FILE. 
10000 ERA"LOADUP":SAVE"LOADUP" 
20000 END 
